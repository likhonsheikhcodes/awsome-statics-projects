name: Deploy and Update Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight

jobs:
  validate:
    name: Validate Project Code and Structure
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Updated to a more modern version for compatibility

      # Install validation tools
      - name: Install Validation Tools
        run: |
          npm install -g htmlhint stylelint eslint stylelint-config-standard

      # Default configuration files for tools
      - name: Create Default Configuration Files
        run: |
          echo '{ "rules": { "attr-value-not-empty": true } }' > .htmlhintrc
          echo '{ "extends": "stylelint-config-standard" }' > .stylelintrc.json
          echo '{ "env": { "browser": true, "node": true }, "extends": "eslint:recommended" }' > .eslintrc.json

      # Validate project files
      - name: Validate Project Files
        run: |
          set -e
          for project in ./projects/*/; do
            echo "Validating $project"
            # Validate HTML
            if [ -f "$project/index.html" ]; then
              htmlhint "$project/index.html"
            fi
            # Validate CSS
            if [ -d "$project/css" ]; then
              stylelint "$project/css/*.css"
            fi
            # Validate JS (if present)
            if [ -f "$project/js/script.js" ]; then
              eslint "$project/js/*.js"
            fi
          done

  lighthouse:
    name: Lighthouse Performance Check
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Run Lighthouse performance check
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://likhonsheikhcodes.github.io/awsome-statics-projects/
          uploadArtifacts: true
          temporaryPublicStorage: true

  update-readme:
    name: Update README and Stats
    runs-on: ubuntu-latest
    needs: validate
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install required modules
      - name: Install Required Modules
        run: npm install @octokit/rest fs-extra

      # Update README and project stats
      - name: Update README and Project Stats
        run: |
          node .github/scripts/update-stats.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Update project list
      - name: Update Project List
        run: |
          node .github/scripts/update-projects.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Commit and push changes
      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "docs: updated README stats and projects" || echo "No changes to commit"
          git push

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [validate, lighthouse]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      # Checkout repository
      - uses: actions/checkout@v3

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build project
      - name: Build Project
        run: npm run build

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          force_orphan: true
          commit_message: "deploy: update GitHub Pages"
